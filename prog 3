import cv2
import numpy as np

def load_image(path):
    image = cv2.imread(path,cv2.IMREAD_GRAYSCALE)
    if image is None:
        print("Error: could not load image")
        exit()
    return image

def apply_sobel(image):
    sobel_x = cv2.Sobel(image,cv2.CV_64F,1,0,ksize =3)
    sobel_y = cv2.Sobel(image,cv2.CV_64F,0,1,ksize=3)
    sobel_combined = cv2.magnitude(sobel_x,sobel_y)
    return sobel_combined

def apply_laplacian(image):
    laplacian = cv2.Laplacian(image,cv2.CV_64F)
    return laplacian

def apply_canny(image, threshold1,threshold2):
    canny_edges = cv2.Canny(image,threshold1,threshold2)
    return canny_edges


def main():
    image_path = input("Enter the path")
    image = load_image(image_path)
    
    sobel_edges = apply_sobel(image)
    laplacian_edges = apply_laplacian(image)
    canny_edges = apply_canny(image,100,200)
    
    cv2.imshow("Original",image)
    cv2.imshow("sobel_edges",sobel_edges)
    cv2.imshow("laplacian_edges",laplacian_edges)
    cv2.imshow("canny_edges",canny_edges)
    
    save_option = input("save: yes or no").strip().lower()    
    if save_option == "yes":
        cv2.imwrite("sobel_edges.jpg",np.uint8(sobel_edges))
        cv2.imwrite("laplceian_edges.jpg",np.uint8(laplacian_edges))
        cv2.imwrite("canny_edges.jpg",np.uint8(canny_edges))
        print("Processed image saved succesfully!")
        
    cv2.waitKey(0)
    cv2.destroyAllWindows()
    
    
if __name__ == "__main__":
    main()
    
